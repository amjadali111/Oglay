{"version":3,"sources":["components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["SignedInLinks","className","to","SignedOuLinks","Navbar","SignedOutLinks","Notifications","ProjectSummary","project","title","content","ProjectList","projects","map","key","id","Dashboard","this","props","Component","connect","state","ProjectDetails","match","params","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","console","log","onSubmit","htmlFor","type","onChange","SignUp","firstName","lastName","createProject","dispatch","getState","getFirebase","getFirestore","collection","add","authorFirstName","authorLastName","authorId","createdAt","Date","then","catch","err","CreateProject","App","exact","path","component","Boolean","window","location","hostname","initState","authReducer","projectReducer","action","rootReducer","combineReducers","auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","settings","timestampsInSnapShots","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6QAceA,EAVc,WACzB,OACI,wBAAIC,UAAU,SACX,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,gBACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,KAAZ,YACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,IAAID,UAAU,mCAA1B,eCIAE,EATc,WACzB,OACI,wBAAIF,UAAU,SACX,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,WACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,WAAZ,YCHFE,EAAS,WAClB,OACI,yBAAKH,UAAU,oBACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAvB,SACA,kBAAC,EAAD,MACA,kBAACI,EAAD,SCDDC,EARO,WAClB,OACI,6BACI,wBAAIL,UAAU,6BAAd,mBCSGM,EAZQ,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OACA,yBAAKP,UAAU,kCACX,yBAAKA,UAAU,wCACX,0BAAMA,UAAU,cAAcO,EAAQC,OACtC,2BAAID,EAAQE,SACZ,uBAAGT,UAAU,aAAb,yBCQGU,EAbK,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAClB,OACI,yBAAKX,UAAU,yBACX,wBAAIA,UAAU,6BAAd,iBACEW,GAAYA,EAASC,IAAI,SAAAL,GACnB,OACI,kBAAC,EAAD,CAAgBA,QAAWA,EAASM,IAAKN,EAAQO,S,QCJ5DC,EAAb,iLAEc,IACEJ,EAAaK,KAAKC,MAAlBN,SACR,OACI,yBAAKX,UAAU,uBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAaW,SAAYA,KAE7B,yBAAKX,UAAU,qCACX,kBAAC,EAAD,aAXxB,GAA+BkB,aA2BhBC,cARS,SAACC,GACrB,MAAO,CACHT,SAAUS,EAAMb,QAAQI,WAMjBQ,CAAyBJ,GCVzBM,EApBQ,SAACJ,GACpB,IAAMH,EAAKG,EAAMK,MAAMC,OAAOT,GAC9B,OACI,yBAAKd,UAAU,qCACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAhB,mBAA8Cc,GAC9C,wFAIJ,yBAAKd,UAAU,wCACX,oDACA,uD,QC2BLwB,EAxCf,2MACIJ,MAAM,CACFK,MAAM,GACNC,SAAS,IAHjB,EAMIC,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOhB,GAAMc,EAAEE,OAAOC,SARrC,EAYIC,aAAe,SAACJ,GACZA,EAAEK,iBACFC,QAAQC,IAAI,EAAKf,QAdzB,wEAkBQ,OACI,yBAAKpB,UAAU,aACX,0BAAMoC,SAAUpB,KAAKgB,aAAchC,UAAU,SACzC,wBAAIA,UAAU,2BAAd,WACD,6BAAK,6BACJ,yBAAKA,UAAU,eACX,2BAAOqC,QAAQ,SAAf,SACA,2BAAOC,KAAK,QAAQxB,GAAG,QAAQyB,SAAUvB,KAAKW,gBAElD,yBAAK3B,UAAU,eACX,2BAAOqC,QAAQ,YAAf,YACA,2BAAOC,KAAK,WAAWxB,GAAG,WAAWyB,SAAUvB,KAAKW,gBAExD,yBAAK3B,UAAU,eACX,4BAAQA,UAAU,gCAAlB,gBAhCxB,GAA4BkB,aCoDbsB,EApDf,2MACIpB,MAAM,CACFK,MAAM,GACNC,SAAS,GACTe,UAAU,GACVC,SAAS,IALjB,EASIf,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOhB,GAAMc,EAAEE,OAAOC,SAXrC,EAeIC,aAAe,SAACJ,GAEZA,EAAEK,iBACFC,QAAQC,IAAI,EAAKf,QAlBzB,wEAsBQ,OACI,yBAAKpB,UAAU,aACX,0BAAMoC,SAAUpB,KAAKgB,aAAchC,UAAU,SACzC,wBAAIA,UAAU,2BAAd,WACD,6BAAK,6BACJ,yBAAKA,UAAU,sBACX,2BAAOA,UAAU,SAASqC,QAAQ,SAAlC,SACA,2BAAOC,KAAK,QAAQxB,GAAG,QAAQyB,SAAUvB,KAAKW,aAAc3B,UAAU,cAE1E,yBAAKA,UAAU,sBACX,2BAAOA,UAAU,SAASqC,QAAQ,YAAlC,YACA,2BAAOC,KAAK,WAAWxB,GAAG,WAAWyB,SAAUvB,KAAKW,gBAExD,yBAAK3B,UAAU,sBACX,2BAAOA,UAAU,SAASqC,QAAQ,aAAlC,cACA,2BAAOC,KAAK,OAAOxB,GAAG,YAAYyB,SAAUvB,KAAKW,gBAErD,yBAAK3B,UAAU,sBACX,2BAAOsC,KAAK,OAAOxB,GAAG,WAAWyB,SAAUvB,KAAKW,eAChD,2BAAO3B,UAAU,SAASqC,QAAQ,YAAlC,cAEJ,yBAAKrC,UAAU,gBACX,4BAAQA,UAAU,+BAAlB,mBA5CxB,GAA4BkB,a,4NCFrB,IAmBQyB,EAnBc,SAACpC,GAG1B,OAAO,SAACqC,EAAUC,EAAX,GAAqD,EAA9BC,aACRC,EADsC,EAAjBA,gBAE7BC,WAAW,YAAYC,I,qVAAjC,IACG1C,EADH,CAEA2C,gBAAgB,MAChBC,eAAgB,QAChBC,SAAU,KACVC,UAAW,IAAIC,QAChBC,KAAK,WACJX,EAAS,CAAEN,KAAK,iBAAkB/B,cACnCiD,MAAM,SAACC,GACNb,EAAS,CAAEN,KAAK,uBAAwBmB,YCVnCC,EAAb,2MACItC,MAAM,CACJZ,MAAM,GACNC,QAAQ,IAHd,EAMIkB,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOhB,GAAMc,EAAEE,OAAOC,SARrC,EAYIC,aAAe,SAACJ,GAEZA,EAAEK,iBAEF,EAAKhB,MAAM0B,cAAc,EAAKvB,QAhBtC,wEAoBQ,OACI,yBAAKpB,UAAU,aACX,0BAAMoC,SAAUpB,KAAKgB,aAAchC,UAAU,SACzC,wBAAIA,UAAU,2BAAd,sBACD,6BAAK,6BACJ,yBAAKA,UAAU,sBACX,2BAAOsC,KAAK,OAAOxB,GAAG,QAAQyB,SAAUvB,KAAKW,eAC7C,2BAAO3B,UAAU,SAASqC,QAAQ,SAAlC,UAEJ,yBAAKrC,UAAU,sBACX,2BAAOA,UAAU,SAASqC,QAAQ,WAAlC,mBACA,8BAAUvB,GAAG,UAAUd,UAAU,uBAAuBuC,SAAUvB,KAAKW,gBAE3E,yBAAK3B,UAAU,gBACX,4BAAQA,UAAU,gCAAlB,iBAlCxB,GAAmCkB,aAgDpBC,cAAQ,KANI,SAACyB,GACxB,MAAO,CACHD,cAAe,SAACpC,GAAD,OAAaqC,EAASD,EAAcpC,OAI5CY,CAAiCuC,GCxBjCC,EAnBf,iLAEQ,OACI,kBAAC,IAAD,KACI,6BACI,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW/C,IACjC,kBAAC,IAAD,CAAO8C,KAAK,eAAeC,UAAWzC,IACtC,kBAAC,IAAD,CAAOwC,KAAK,UAAUC,UAAWtC,IACjC,kBAAC,IAAD,CAAOqC,KAAK,UAAUC,UAAWtB,IACjC,kBAAC,IAAD,CAAOqB,KAAK,UAAUC,UAAWJ,WAXzD,GAAyBxC,aCGL6C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5C,MACvB,2D,YCjBA6C,EAAY,GAELC,EAAc,WAA6B,IAA5BhD,EAA2B,uDAArB+C,EAAqB,iCACnD,OAAO/C,GCHL+C,EAAY,CACdxD,SAAS,CACL,CAACG,GAAG,IAAMN,MAAO,YAAYC,QAAS,yBACtC,CAACK,GAAG,IAAMN,MAAO,YAAYC,QAAS,uBACtC,CAACK,GAAG,IAAMN,MAAO,YAAYC,QAAS,yBAIjC4D,EAAiB,WAA+B,IAA9BjD,EAA6B,uDAArB+C,EAAUG,EAAW,uCACxD,OAAOA,EAAOhC,MACV,IAAK,iBAED,OADAJ,QAAQC,IAAI,kBAAmBmC,EAAO/D,SAC/Ba,EACX,IAAK,uBAED,OADAc,QAAQC,IAAI,uBAAwBmC,EAAOb,KACpCrC,EACX,QACI,OAAOA,ICdNmD,EAAcC,YAAgB,CACvCC,KAAML,EACN7D,QAAS8D,I,0DCQXK,IAASC,cAVU,CACjBC,OAAQ,0CACRC,WAAY,0BACZC,YAAa,iCACbC,UAAW,UACXC,cAAe,GACfC,kBAAmB,eACnBC,MAAO,8CAITR,IAASS,YAAYC,SAAS,CAAEC,uBAAuB,IAExCX,QAAf,ECJIY,EAAQC,YAAYhB,EACtBiB,YAAQC,YAAgBC,IAAMC,kBAAkB,CAAE7C,0BAAcC,+BAChE6C,yBAAeC,GACfC,6BAAmBD,KAIvBE,IAASC,OAAO,kBAAC,IAAD,CAAUV,MAASA,GAAO,kBAAC,EAAD,OAAoBW,SAASC,eAAe,SL6GhF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9C,KAAK,SAAA+C,GACjCA,EAAaC,iB","file":"static/js/main.9a06e1bd.chunk.js","sourcesContent":["import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nexport const SignedInLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n           <li><NavLink to='/create'>New Project</NavLink></li> \r\n           <li><NavLink to='/'>Log Out</NavLink></li> \r\n           <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">No Where</NavLink></li> \r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedInLinks\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nexport const SignedOuLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n           <li><NavLink to='/signup'>SignUp</NavLink></li> \r\n           <li><NavLink to='/signin'>LogIn</NavLink></li> \r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOuLinks\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className=\"nav-wrapper blue\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">Oglay</Link>\r\n                <SignedInLinks/>\r\n                <SignedOutLinks/>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nconst Notifications = () => {\r\n    return (\r\n        <div>\r\n            <h3 className=\"title grey-text lighten-1\">Notifications</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications\r\n","import React from 'react'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n        <div className=\"card-content grey-text text-darken-3\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n            <p className=\"grey-text\">date posted here..</p>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary\r\n","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\n\r\nconst ProjectList = ({projects}) => { // map is not a function due invalid destrucuring curly braces were not used \r\n    return (\r\n        <div className=\"projects-list section\">\r\n            <h3 className=\"title grey-text lighten-1\">Projects List</h3>\r\n            { projects && projects.map(project =>{\r\n                    return(\r\n                        <ProjectSummary project = {project} key={project.id}/>\r\n                    )\r\n                })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList\r\n","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport Projectlist from '../projects/ProjectList'\r\nimport { connect } from 'react-redux';\r\n\r\nexport class Dashboard extends Component {\r\n    \r\n    render() {\r\n        const { projects } = this.props;\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <Projectlist projects = {projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m3 offset-m1 notification\">\r\n                        <Notifications/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{ \r\n    return {\r\n        projects: state.project.projects // here props of dashboard are set to store_state \r\n                                        //which comes from reducer that initializes state\r\n// reducer_state --> store --> app_component --> mapStateToProps --> HOC(i.e connect) --> component_props\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dashboard)\r\n","import React from 'react'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const id = props.match.params.id;\r\n    return (\r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Project Title - {id}</span>\r\n                    <p>\r\n                        Hello this is test project you need to add projects here\r\n                    </p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Posted by the ninja</div>\r\n                    <div>posted date here..</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectDetails\r\n","import React, { Component } from 'react'\r\n\r\nexport class SignIn extends Component {\r\n    state={\r\n        email:'',\r\n        password:''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n   \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign-In</h5>\r\n                   <br/><br/>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div> \r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">LogIn</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn\r\n","import React, { Component } from 'react'\r\n\r\nexport class SignUp extends Component {\r\n    state={\r\n        email:'',\r\n        password:'',\r\n        firstName:'',\r\n        lastName:''\r\n    }\r\n\r\n   \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n   \r\n    handleSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n        console.log(this.state);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign-Up</h5>\r\n                   <br/><br/>\r\n                    <div className=\"input-field col s6\">\r\n                        <label className=\"active\" htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} className=\"validate\"/>\r\n                    </div> \r\n                    <div className=\"input-field col s6\">\r\n                        <label className=\"active\" htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field col s6\">\r\n                        <label className=\"active\" htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field col s6\">\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                        <label className=\"active\" htmlFor=\"lastName\">Last Name</label>\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <button className=\"btn grey darken-1 z-depth-0\">Register</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp\r\n","export const createProject = (project) => {\r\n    // async call to database\r\n    \r\n    return (dispatch, getState, { getFirebase, getFirestore })=>{\r\n        const firestore = getFirestore();\r\n        firestore.collection('projects').add({\r\n        ...project,\r\n        authorFirstName:'Ali',\r\n        authorLastName: 'Noman',\r\n        authorId: 1234,\r\n        createdAt: new Date()\r\n    }).then(()=>{\r\n        dispatch({ type:'CREATE_PROJECT', project })// is same as project:project\r\n    }).catch((err)=>{\r\n        dispatch({ type:'CREATE_PROJECT_ERROR', err })// is same as project:project\r\n    })\r\n        \r\n    }\r\n};\r\nexport default createProject\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport createProject from '../../store/actions/projectActions';\r\n\r\nexport class CreateProject extends Component {\r\n    state={\r\n      title:'',\r\n      content:''\r\n    }\r\n   \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n   \r\n    handleSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.createProject(this.state);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                   <br/><br/>\r\n                    <div className=\"input-field col s6\">\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                        <label className=\"active\" htmlFor=\"title\">Title</label>\r\n                    </div>\r\n                    <div className=\"input-field col s6\">\r\n                        <label className=\"active\" htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n//first parameter is null because first parameter of connect is always mapStateToProps\r\nexport default connect(null,mapDispatchToProps)(CreateProject)\r\n","import React, { Component } from 'react'\r\nimport {BrowserRouter,Switch,Route} from 'react-router-dom';\r\nimport {Navbar} from './components/layout/Navbar'\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport ProjectDetails from './components/projects/ProjectDetails';\r\nimport SignIn from './components/auth/SignIn';\r\nimport SignUp from './components/auth/SignUp';\r\nimport CreateProject from './components/projects/CreateProject';\r\n\r\nexport class App extends Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <div>\r\n                    <Navbar/>\r\n                    <Switch>\r\n                        <Route exact path='/' component={Dashboard}/>\r\n                        <Route path='/project/:id' component={ProjectDetails}/>\r\n                        <Route path='/signin' component={SignIn}/>\r\n                        <Route path='/signup' component={SignUp}/>\r\n                        <Route path='/create' component={CreateProject}/>\r\n                    </Switch>\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nconst initState = {}\r\n\r\nexport const authReducer = (state=initState,action) => {\r\n    return state;\r\n}\r\n\r\nexport default authReducer\r\n","\r\nconst initState = {\r\n    projects:[\r\n        {id:'1' , title: 'project 1',content: 'this is first project'},\r\n        {id:'2' , title: 'project 2',content: 'this is 2nd project'},        \r\n        {id:'3' , title: 'project 3',content: 'this is 3rd project'}\r\n    ]\r\n}; \r\n\r\nexport const projectReducer = (state = initState,action) => {\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('Create project error', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n        }\r\n}\r\n\r\nexport default projectReducer\r\n","import { authReducer } from './authReducer';\r\nimport { projectReducer } from './projectReducer';\r\nimport { combineReducers } from 'redux'\r\n\r\nexport const rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer\r\n});\r\n\r\nexport default rootReducer\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAAVhPRdpEVTLiPc1Bc7r9UMTOOL0nz8Ac\",\r\n    authDomain: \"oglaydb.firebaseapp.com\",\r\n    databaseURL: \"https://oglaydb.firebaseio.com\",\r\n    projectId: \"oglaydb\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"358271414279\",\r\n    appId: \"1:358271414279:web:9092ab73080ab156863aa2\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({ timestampsInSnapShots: true })\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose} from 'redux';\nimport { rootReducer } from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk'; \nimport {reduxFirestore, getFirestore} from 'redux-firestore';\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer, \n    compose(applyMiddleware(thunk.withExtraArgument({ getFirebase , getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig)\n        )\n    );\n\nReactDOM.render(<Provider store = {store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}